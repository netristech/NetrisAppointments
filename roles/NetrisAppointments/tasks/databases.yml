---
- name: Check if install file exists
  stat:
    path: "/home/netris/{{ item }}.sql.xz"
  with_items: 
  - nadb
  - eqdb
  register: instfile
  
- name: Check if database exists
  command: "mysql -u root -p{{ na_root_pw }} -e 'SHOW DATABASES;' | grep {{ item }}"
  with_items:
  - "{{ na_database }}"
  - "{{ eq_database }}"
  register: database
  failed_when: database.rc == 2
  
- name: Extract database files
  command: "xz -dkf /home/netris/{{ item }}.sql.xz"
  when:
  - instfile.results[0].stdout.stat.exists == True
  - instfile.results[1].stdout.stat.exists == True
  - database.results[0].rc == 1
  - database.results[1].rc == 1
  with_items:
  - nadb
  - eqdb
    
- name: Install databases
  mysql_db:
    login_user: root
    login_password: "{{ na_root_pw }}"
    name: "{{ item.name }}"
    target: "{{ item.src }}"
    state: "{{ item.state }}"
  when:
  - instfile.results[0].stdout.stat.exists == True
  - instfile.results[1].stdout.stat.exists == True
  - database.results[0].rc == 1
  - database.results[1].rc == 1
  with_items:
  - { name: '{{ na_database }}', src: '/home/netris/nadb.sql', state: 'import' }
  - { name: '{{ eq_database }}', src: '/home/netris/eqdb.sql', state: 'import' }
  
- name: Cleanup leftover files
  command: "rm -f /home/netris/{{ item }}.sql"
  when:
  - instfile.results[0].stdout.stat.exists == True
  - instfile.results[1].stdout.stat.exists == True
  - database.results[0].rc == 1
  - database.results[1].rc == 1
  with_items:
  - nadb
  - eqdb
